// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from br_network_manager.djinni

#import "BrNetworkManager+Private.h"
#import "BrNetworkManager.h"
#import "BrNetworkListener+Private.h"
#import "BrNetworkManager+Private.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#include <exception>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface BrNetworkManager ()

- (id)initWithCpp:(const std::shared_ptr<::biblereader::BrNetworkManager>&)cppRef;

@end

@implementation BrNetworkManager {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::biblereader::BrNetworkManager>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::biblereader::BrNetworkManager>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

+ (nullable BrNetworkManager *)create {
    try {
        auto r = ::biblereader::BrNetworkManager::create();
        return ::djinni_generated::BrNetworkManager::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull NSArray<NSString *> *)getBibleBooks:(nullable id<BrNetworkListener>)listener {
    try {
        auto r = _cppRefHandle.get()->get_bible_books(::djinni_generated::BrNetworkListener::toCpp(listener));
        return ::djinni::List<::djinni::String>::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto BrNetworkManager::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto BrNetworkManager::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<BrNetworkManager>(cpp);
}

}  // namespace djinni_generated

@end
