// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from network_manager.djinni

#include "NativeNetworkManager.hpp"  // my header
#include "NativeNetworkListener.hpp"
#include "NativeNetworkManager.hpp"

namespace djinni_generated {

NativeNetworkManager::NativeNetworkManager() : ::djinni::JniInterface<::biblereader::NetworkManager, NativeNetworkManager>("com/thoughtsofanintrovert/brDjinni/NetworkManager$CppProxy") {}

NativeNetworkManager::~NativeNetworkManager() = default;


CJNIEXPORT void JNICALL Java_com_thoughtsofanintrovert_brDjinni_NetworkManager_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::biblereader::NetworkManager>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_com_thoughtsofanintrovert_brDjinni_NetworkManager_create(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::biblereader::NetworkManager::create();
        return ::djinni::release(::djinni_generated::NativeNetworkManager::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_com_thoughtsofanintrovert_brDjinni_NetworkManager_00024CppProxy_native_1getBibleBooks(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_listener)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::biblereader::NetworkManager>(nativeRef);
        ref->get_bible_books(::djinni_generated::NativeNetworkListener::toCpp(jniEnv, j_listener));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
